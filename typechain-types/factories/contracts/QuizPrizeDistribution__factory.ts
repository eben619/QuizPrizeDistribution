/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  QuizPrizeDistribution,
  QuizPrizeDistributionInterface,
} from "../../contracts/QuizPrizeDistribution";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "userCompletionCount",
        type: "uint256",
      },
    ],
    name: "DistributionTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PrizeDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "quizId",
        type: "uint256",
      },
    ],
    name: "PrizeDistributionCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "quizId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPrize",
        type: "uint256",
      },
    ],
    name: "PrizeDistributionStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "QuizCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "quizId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "RandomNumberGenerated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quizId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_randomNumber",
        type: "uint256",
      },
    ],
    name: "distributePrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributionTriggered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quizId",
        type: "uint256",
      },
    ],
    name: "participateInQuiz",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "questionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "questionRandomNumbers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quizCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPrize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "userCompletionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userPrizes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userQuizParticipation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userQuizProgress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260146005553480156200001657600080fd5b5060405162001a4738038062001a4783398181016040528101906200003c919062000223565b84848173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826008819055508160098190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050620002ab565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001758262000148565b9050919050565b620001878162000168565b81146200019357600080fd5b50565b600081519050620001a7816200017c565b92915050565b6000819050919050565b620001c281620001ad565b8114620001ce57600080fd5b50565b600081519050620001e281620001b7565b92915050565b6000819050919050565b620001fd81620001e8565b81146200020957600080fd5b50565b6000815190506200021d81620001f2565b92915050565b600080600080600060a0868803121562000242576200024162000143565b5b6000620002528882890162000196565b9550506020620002658882890162000196565b94505060406200027888828901620001d1565b93505060606200028b888289016200020c565b92505060806200029e8882890162000196565b9150509295509295909350565b60805160a051611779620002ce6000396000610b510152600050506117796000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806361728f39116100a257806394985ddd1161007157806394985ddd146102845780639766298b146102a0578063db263b49146102d0578063ddca3f4314610300578063ff249de41461031e5761010b565b806361728f391461022057806370740ac91461023e57806382b1ad50146102485780638da5cb5b146102665761010b565b8063443e91a4116100de578063443e91a41461019a57806355a373d6146101b657806358cf4698146101d4578063595fb9e6146102045761010b565b80631468aa2c1461011057806327c9af401461012e5780632e8497cf1461014c5780633971a0871461016a575b600080fd5b61011861033c565b6040516101259190610e3c565b60405180910390f35b610136610342565b6040516101439190610e72565b60405180910390f35b610154610355565b6040516101619190610e3c565b60405180910390f35b610184600480360381019061017f9190610f1c565b61035b565b6040516101919190610e72565b60405180910390f35b6101b460048036038101906101af9190610f5c565b61038a565b005b6101be610566565b6040516101cb9190610fab565b60405180910390f35b6101ee60048036038101906101e99190610fc6565b61058c565b6040516101fb9190610e3c565b60405180910390f35b61021e60048036038101906102199190610fc6565b6105a4565b005b6102286108a9565b604051610235919061100c565b60405180910390f35b6102466108af565b005b610250610b23565b60405161025d9190610e3c565b60405180910390f35b61026e610b29565b60405161027b9190610fab565b60405180910390f35b61029e60048036038101906102999190611053565b610b4f565b005b6102ba60048036038101906102b59190611093565b610beb565b6040516102c79190610e3c565b60405180910390f35b6102ea60048036038101906102e59190611093565b610c03565b6040516102f79190610e3c565b60405180910390f35b610308610c1b565b6040516103159190610e3c565b60405180910390f35b610326610c21565b6040516103339190610e3c565b60405180910390f35b60055481565b600760009054906101000a900460ff1681565b60035481565b600a6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104119061111d565b60405180910390fd5b600760009054906101000a900460ff16610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090611189565b60405180910390fd5b6000600c600084815260200190815260200160002054146104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b69061121b565b60405180910390fd5b80600c60008481526020019081526020016000208190555080600460008282546104e9919061126a565b92505081905550817f252851c72bba973a3eff4c55d976631b74c5e463b736ab3ba7ea37cbe40bbc19826040516105209190610e3c565b60405180910390a2817f04e6797aca3c0c561cf4b8ceaeea63900684999b3986d05141746dd89faeda4e60045460405161055a9190610e3c565b60405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c6020528060005260406000206000915090505481565b600a600082815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610642576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610639906112ea565b60405180910390fd5b60055460035410610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90611356565b60405180910390fd5b6001600a600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061074190611376565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b960405160405180910390a2600554600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361082d57600660008154809291906107e490611376565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f820679b4d4510cf6223b9476e8ffc8320043abf1b1df405a2a5844c32478d30f60405160405180910390a25b6207a1206006540361088e576001600760006101000a81548160ff0219169083151502179055507f01d5a1e370499ab5939b7a1e819bccfcfd648d33bbdcef2c8b035b211af2c2f16006546040516108859190610e3c565b60405180910390a15b600360008154809291906108a190611376565b919050555050565b60085481565b6000600c600060035481526020019081526020016000205403610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fe9061140a565b60405180910390fd5b600554600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190611476565b60405180910390fd5b600760009054906101000a900460ff166109d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d090611189565b60405180910390fd5b6000600554670de0b6b3a7640000600c6000600354815260200190815260200160002054610a079190611496565b610a119190611507565b905080600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fb8e091d87f82e56d22276c9a0088ea5d6068e355383dc08b2721b7b6cb10e84582604051610a9d9190610e3c565b60405180910390a2610ad2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610c27565b3373ffffffffffffffffffffffffffffffffffffffff167f12f4533b5cbd2c9f8a0752a2d0b16379af992dbb2a0844a5007a19d983b3a93482604051610b189190610e3c565b60405180910390a250565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd490611584565b60405180910390fd5b610be78282610d7c565b5050565b600b6020528060005260406000206000915090505481565b600d6020528060005260406000206000915090505481565b60095481565b60065481565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610c5c9291906115a4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610cc6919061163e565b6000604051808303816000865af19150503d8060008114610d03576040519150601f19603f3d011682016040523d82523d6000602084013e610d08565b606091505b5091509150818015610d365750600081511480610d35575080806020019051810190610d349190611681565b5b5b610d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6c906116fa565b60405180910390fd5b5050505050565b60008260001c90503073ffffffffffffffffffffffffffffffffffffffff1663443e91a482846040518363ffffffff1660e01b8152600401610dbf92919061171a565b600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50505050807fd6481908bb768d3a69f5265cacf364ef1f6dd6d6b50fede3a580160189d6b52060405160405180910390a2505050565b6000819050919050565b610e3681610e23565b82525050565b6000602082019050610e516000830184610e2d565b92915050565b60008115159050919050565b610e6c81610e57565b82525050565b6000602082019050610e876000830184610e63565b92915050565b600080fd5b610e9b81610e23565b8114610ea657600080fd5b50565b600081359050610eb881610e92565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ee982610ebe565b9050919050565b610ef981610ede565b8114610f0457600080fd5b50565b600081359050610f1681610ef0565b92915050565b60008060408385031215610f3357610f32610e8d565b5b6000610f4185828601610ea9565b9250506020610f5285828601610f07565b9150509250929050565b60008060408385031215610f7357610f72610e8d565b5b6000610f8185828601610ea9565b9250506020610f9285828601610ea9565b9150509250929050565b610fa581610ede565b82525050565b6000602082019050610fc06000830184610f9c565b92915050565b600060208284031215610fdc57610fdb610e8d565b5b6000610fea84828501610ea9565b91505092915050565b6000819050919050565b61100681610ff3565b82525050565b60006020820190506110216000830184610ffd565b92915050565b61103081610ff3565b811461103b57600080fd5b50565b60008135905061104d81611027565b92915050565b6000806040838503121561106a57611069610e8d565b5b60006110788582860161103e565b925050602061108985828601610ea9565b9150509250929050565b6000602082840312156110a9576110a8610e8d565b5b60006110b784828501610f07565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2064697374726962757465207072697a6500600082015250565b6000611107601f836110c0565b9150611112826110d1565b602082019050919050565b60006020820190508181036000830152611136816110fa565b9050919050565b7f446973747269627574696f6e206e6f7420747269676765726564000000000000600082015250565b6000611173601a836110c0565b915061117e8261113d565b602082019050919050565b600060208201905081810360008301526111a281611166565b9050919050565b7f5072697a6520616c726561647920646973747269627574656420666f7220746860008201527f6973207175697a00000000000000000000000000000000000000000000000000602082015250565b60006112056027836110c0565b9150611210826111a9565b604082019050919050565b60006020820190508181036000830152611234816111f8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061127582610e23565b915061128083610e23565b92508282019050808211156112985761129761123b565b5b92915050565b7f5573657220616c72656164792070617274696369706174656400000000000000600082015250565b60006112d46019836110c0565b91506112df8261129e565b602082019050919050565b60006020820190508181036000830152611303816112c7565b9050919050565b7f5175697a20616c726561647920656e6465640000000000000000000000000000600082015250565b60006113406012836110c0565b915061134b8261130a565b602082019050919050565b6000602082019050818103600083015261136f81611333565b9050919050565b600061138182610e23565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113b3576113b261123b565b5b600182019050919050565b7f5072697a65206e6f742079657420646973747269627574656400000000000000600082015250565b60006113f46019836110c0565b91506113ff826113be565b602082019050919050565b60006020820190508181036000830152611423816113e7565b9050919050565b7f55736572206861736e277420636f6d706c6574656420746865207175697a0000600082015250565b6000611460601e836110c0565b915061146b8261142a565b602082019050919050565b6000602082019050818103600083015261148f81611453565b9050919050565b60006114a182610e23565b91506114ac83610e23565b92508282026114ba81610e23565b915082820484148315176114d1576114d061123b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061151282610e23565b915061151d83610e23565b92508261152d5761152c6114d8565b5b828204905092915050565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b600061156e601f836110c0565b915061157982611538565b602082019050919050565b6000602082019050818103600083015261159d81611561565b9050919050565b60006040820190506115b96000830185610f9c565b6115c66020830184610e2d565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156116015780820151818401526020810190506115e6565b60008484015250505050565b6000611618826115cd565b61162281856115d8565b93506116328185602086016115e3565b80840191505092915050565b600061164a828461160d565b915081905092915050565b61165e81610e57565b811461166957600080fd5b50565b60008151905061167b81611655565b92915050565b60006020828403121561169757611696610e8d565b5b60006116a58482850161166c565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006116e46015836110c0565b91506116ef826116ae565b602082019050919050565b60006020820190508181036000830152611713816116d7565b9050919050565b600060408201905061172f6000830185610e2d565b61173c6020830184610e2d565b939250505056fea2646970667358221220f2ae34f626d1a561182fd0436da10a70528077a730123c7d97461f566295fc5a64736f6c63430008180033";

type QuizPrizeDistributionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuizPrizeDistributionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QuizPrizeDistribution__factory extends ContractFactory {
  constructor(...args: QuizPrizeDistributionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _vrfCoordinator: AddressLike,
    _linkToken: AddressLike,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    _tokenContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      _tokenContract,
      overrides || {}
    );
  }
  override deploy(
    _vrfCoordinator: AddressLike,
    _linkToken: AddressLike,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    _tokenContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      _tokenContract,
      overrides || {}
    ) as Promise<
      QuizPrizeDistribution & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): QuizPrizeDistribution__factory {
    return super.connect(runner) as QuizPrizeDistribution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuizPrizeDistributionInterface {
    return new Interface(_abi) as QuizPrizeDistributionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): QuizPrizeDistribution {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as QuizPrizeDistribution;
  }
}
